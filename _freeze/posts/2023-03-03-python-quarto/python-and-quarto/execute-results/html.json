{
  "hash": "7bd28c0aac3a5055fcc1623e8945cb4d",
  "result": {
    "markdown": "---\ntitle: Python in Quarto\nauthor: Filip Wästberg\ndate: '2023-03-03'\ncategories:\n  - python\nimage: minions.jpg\n---\n\nI always have trouble with Python environments. To be honest I haven't really found a setup that I like for it.\n\nNevertheless, I want to try out some Python in Quarto. So here is a short note on how I went about using conda to do that.\n\nI already had a Python environment that I wanted to use. In the quarto yaml, i.e. the header you can specify the Jupyter kernel you would like to use.\n\nFor this post it looks like this:\n\n```\n---\ntitle: \"Python in Quarto\"\nauthor: \"Filip Wästberg\"\ndate: \"2023-03-03\"\ncategories: [python]\njupyter: pyds\nimage: minions.png\n---\n```\n\nSo I had created an environment based on a conda.yaml file like this:\n\n\n```{bash eval=FALSE}\nconda env create -f conda_env.yml\n```\n\n\nAnd activate it \n\n```{bash eval=FALSE}\nconda activate pyds \n```\n\n\n\nThe actual yaml file looked like this:\n\n```\nname: pyds\nchannels:\n  - https://repo.anaconda.com/pkgs/snowflake\n  - nodefaults\ndependencies:\n  - python=3.8\n  - pip\n  - pip:\n    # Snowpark\n    - snowflake-snowpark-python[pandas]==0.10.0\n    # Basics\n    - pandas==1.4.3\n    - numpy==1.22.3\n    # ML\n    - scikit-learn==1.1.1\n    - lightgbm==3.2.1\n    - xgboost==1.5.0\n    # Visualization\n    ...\n```\n\nHowever, to be able to use this environment in Quarto I have to register it to jupyter. \n\nI did that like this:\n\n\n```{bash eval=FALSE}\npython -m ipykernel install --user --name=pyds\n```\n\n",
    "supporting": [
      "python-and-quarto_files"
    ],
    "filters": [],
    "includes": {}
  }
}